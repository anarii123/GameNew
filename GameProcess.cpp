#include "GameProcess.h"
#include <vector>

GameProcess::GameProcess(void)
{
}

void GameProcess::doubleEntryForPay(Account& input, Account& output)
{
    //????? ??????? ??????
    int count = output.getPrice();
	input.spendingCount(count);
	output.payAccount(count);

}
void GameProcess::process(void)
{
    //????? ?????????? ????? 10 ?.?.
//	Account warehouseMaterials(10);
//    //??????? ???????????????? ???? ????????? ???? ?
//	vector<Account> productionDepartamentA;
//    //??????? ???????????????? ???? ????????? ???? B
//	vector<Account> productionDepartamentB;
//    //??????? ???????????????? ???? ????????? ???? ?
//	vector<Account> fastProductionDepartamentA;
//    //??????? ???????????????? ???? ????????? ???? B
//	vector<Account> fastProductionDepartamentB;
//    //???? ???????????????? ??? ????????? ???? ? ?????????? 10 ?????? ?? 4 ????????
//    Account productionDepartamentelA(4,10);
//    //?? ?? ??? B ????????? 20 ????????????????? ???????????? 4 ????????
//    Account productionDepartamentelB(4,20);
//    //??????? A ????????? 30 t=2
//    Account fastProductionDepartamentelA(2,30);
//    //??????? B ????????? 40 t=2
//    Account fastProductionDepartamentelB(2,40);
//    //????? ??????? ?????????
//	Account warehouseFinishedProducts(20);
//    //????
//    Account office(0,25);
//    //??????????? ?????????????
//    Account receivable(4,0);
//    //???? ?????
//	Account money;
//    // ???? ???????
//	Account kredits;

//    //??????? ?????????
//    //? ?????? ????????
//    money.comingCount(85);
//    //??????? ?????? ???????  ?????? ??????????
//    doubleEntryForPay(money, warehouseMaterials);
//    //??????? ???? ???????????????? ????? ????????? ???? ?
//    for (int i = 0; i<2; i++)
//    {
//        productionDepartamentA.push_back(productionDepartamentelA);
//		doubleEntryForPay(money, productionDepartamentA[i]);
//	}
//    //??????? ?????? ??????? ?????????
//	doubleEntryForPay(money, warehouseFinishedProducts);
//    //??????? ?????
//    doubleEntryForPay(money, office);
	
}

